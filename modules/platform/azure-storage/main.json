{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.11.1.770",
      "templateHash": "9734564170040221748"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "sa",
      "metadata": {
        "description": "Prefix to use for the Storage Account Name."
      },
      "maxLength": 5,
      "minLength": 2
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Resource Location."
      }
    },
    "enableDeleteLock": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable lock to prevent accidental deletion"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags."
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS",
        "Standard_GRS"
      ],
      "metadata": {
        "description": "Specifies the storage account sku type."
      }
    },
    "rbacPermissions": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Array of objects that describe RBAC permissions, format { roleDefinitionResourceId (string), principalId (string), principalType (enum), enabled (bool) }. Ref: https://docs.microsoft.com/en-us/azure/templates/microsoft.authorization/roleassignments?tabs=bicep"
      }
    },
    "privateLinkSettings": {
      "type": "object",
      "defaultValue": {
        "subnetId": "1",
        "vnetId": "1"
      },
      "metadata": {
        "description": "Settings Required to Enable Private Link"
      }
    },
    "privateEndpointName": {
      "type": "string",
      "defaultValue": "storagePrivateEndpoint",
      "metadata": {
        "description": "Specifies the name of the private link to the Azure Container Registry."
      }
    }
  },
  "variables": {
    "cleanPrefix": "[substring(parameters('prefix'), 0, min(length(parameters('prefix')), 5))]",
    "unique": "[uniqueString(resourceGroup().id)]",
    "name": "[format('{0}{1}', variables('cleanPrefix'), variables('unique'))]",
    "enablePrivateLink": "[and(not(equals(parameters('privateLinkSettings').vnetId, '1')), not(equals(parameters('privateLinkSettings').subnetId, '1')))]",
    "publicDNSZoneForwarder": "[format('blob.{0}', environment().suffixes.storage)]",
    "privateDnsZoneName": "[format('privatelink.{0}', variables('publicDNSZoneForwarder'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[replace(format('{0}', variables('name')), '-', '')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "networkAcls": "[if(variables('enablePrivateLink'), createObject('bypass', 'AzureServices', 'defaultAction', 'Deny'), createObject())]"
      }
    },
    {
      "condition": "[parameters('enableDeleteLock')]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2017-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', replace(format('{0}', variables('name')), '-', ''))]",
      "name": "[format('{0}-lock', replace(format('{0}', variables('name')), '-', ''))]",
      "properties": {
        "level": "CanNotDelete"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', replace(format('{0}', variables('name')), '-', ''))]"
      ]
    },
    {
      "condition": "[parameters('rbacPermissions')[copyIndex()].enabled]",
      "copy": {
        "name": "roleAssignment",
        "count": "[length(parameters('rbacPermissions'))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', replace(format('{0}', variables('name')), '-', ''))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', replace(format('{0}', variables('name')), '-', '')), parameters('rbacPermissions')[copyIndex()].principalId, parameters('rbacPermissions')[copyIndex()].roleDefinitionResourceId)]",
      "properties": {
        "roleDefinitionId": "[parameters('rbacPermissions')[copyIndex()].roleDefinitionResourceId]",
        "principalId": "[parameters('rbacPermissions')[copyIndex()].principalId]",
        "principalType": "[parameters('rbacPermissions')[copyIndex()].principalType]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', replace(format('{0}', variables('name')), '-', ''))]"
      ]
    },
    {
      "condition": "[variables('enablePrivateLink')]",
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[variables('privateDnsZoneName')]",
      "location": "global",
      "properties": {}
    },
    {
      "condition": "[variables('enablePrivateLink')]",
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2022-01-01",
      "name": "[parameters('privateEndpointName')]",
      "location": "[parameters('location')]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[parameters('privateEndpointName')]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', replace(format('{0}', variables('name')), '-', ''))]",
              "groupIds": [
                "blob"
              ]
            }
          }
        ],
        "subnet": {
          "id": "[parameters('privateLinkSettings').subnetId]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', replace(format('{0}', variables('name')), '-', ''))]"
      ]
    },
    {
      "condition": "[variables('enablePrivateLink')]",
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2022-01-01",
      "name": "[format('{0}/dnsgroupname', parameters('privateEndpointName'))]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "dnsConfig",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointName'))]"
      ]
    },
    {
      "condition": "[variables('enablePrivateLink')]",
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', variables('privateDnsZoneName'), 'link_to_vnet')]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[parameters('privateLinkSettings').vnetId]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
      ]
    }
  ]
}